
import streamlit as st
from backend.pipeline import VideoProcessor
from backend.pipline_settings import PipelineSettings


class PipelineUI:
    def __init__(self):
        self.pipeline_settings = PipelineSettings()
        self.video_file = None
        self.results = {}

    def render_sidebar(self):
        st.sidebar.header("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞–π–ø–ª–∞–π–Ω–∞")

        self.pipeline_settings.enable_stt = st.sidebar.checkbox(
            "üí¨ –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏ (Whisper)", value=self.pipeline_settings.enable_stt)
        if self.pipeline_settings.enable_stt:
            self.pipeline_settings.whisper_model_size = st.sidebar.selectbox(
                "Whisper-–º–æ–¥–µ–ª—å", ["tiny", "base", "small"], index=0)
            self.pipeline_settings.enable_correction = st.sidebar.checkbox(
                "–ö–æ—Ä—Ä–µ–∫—Ü–∏—è (T5-base)", value=self.pipeline_settings.enable_correction)
            self.pipeline_settings.enable_summarization = st.sidebar.checkbox(
                "–°—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—è (T5-base)", value=self.pipeline_settings.enable_summarization)

        self.pipeline_settings.enable_yolo = st.sidebar.checkbox(
            "üîç –ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ (YOLO)", value=self.pipeline_settings.enable_yolo)
        if self.pipeline_settings.enable_yolo:
            self.pipeline_settings.yolo_size = st.sidebar.selectbox(
                "YOLOv11 –º–æ–¥–µ–ª—å", ["nano", "small", "medium"], index=0)

        self.pipeline_settings.enable_objects = st.sidebar.checkbox(
            "üî£ –ü–æ–∏—Å–∫ —Ç–µ–∫—Å—Ç–∞ (OCR)", value=self.pipeline_settings.enable_objects)
        if self.pipeline_settings.enable_objects:
            self.pipeline_settings.ocr_models = st.sidebar.selectbox(
                "OCR –º–æ–¥–µ–ª—å", ["EasyOCR", "TrOCR"])
            self.pipeline_settings.yolo_size_ocr = st.sidebar.selectbox(
                "YOLOv11 –º–æ–¥–µ–ª—å", ["–±–µ–∑", "nano", "small", "medium"])

        self.pipeline_settings.enable_classification = st.sidebar.checkbox(
            "üè∑Ô∏è –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –≤–∏–¥–µ–æ (–û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ UCF101)", value=self.pipeline_settings.enable_classification)
        if self.pipeline_settings.enable_classification:
            self.pipeline_settings.class_models = st.sidebar.selectbox(
                "–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã —Ç–∏–ø–∞ –≤–∏–¥–µ–æ", ["LogReg", "MoE", "DBoF"])

    def upload_video(self):
        self.video_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∏–¥–µ–æ—Ñ–∞–π–ª", type=["mp4", "avi", "mov", "mkv", "webm"])


    def run_analysis(self):
        if self.video_file and st.button("‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–Ω–∞–ª–∏–∑"):
            with st.spinner("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∏–¥–µ–æ..."):
                processor = VideoProcessor(
                    whisper_size=self.pipeline_settings.whisper_model_size if self.pipeline_settings.enable_stt else None,
                    correct_t5=self.pipeline_settings.enable_correction if self.pipeline_settings.enable_stt else False,
                    summarize_t5=self.pipeline_settings.enable_summarization if self.pipeline_settings.enable_stt else False,
                    enable_yolo=self.pipeline_settings.enable_yolo,
                    yolo_size_ocr=self.pipeline_settings.yolo_size_ocr if self.pipeline_settings.yolo_size_ocr != "–±–µ–∑" else None,
                    yolo_size=self.pipeline_settings.yolo_size if self.pipeline_settings.enable_yolo else None,
                    enable_objects=self.pipeline_settings.enable_objects,
                    ocr_models=self.pipeline_settings.ocr_models if self.pipeline_settings.enable_objects else None,
                    class_models=self.pipeline_settings.class_models if self.pipeline_settings.enable_classification else None,
                )
                self.results = processor.process(self.video_file)

    def show_results(self):
        if self.results:
            st.subheader("üìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞")
        if "transcript" in self.results:
            st.text_area("–¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è", self.results["transcript"], height=150)
        if "summary" in self.results:
            st.text_area("–°—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—è", self.results["summary"], height=150)
        if "objects" in self.results:
            st.text_area("–ù–∞ –≤–∏–¥–µ–æ –Ω–∞—à–ª–∏—Å—å —Ç–∞–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã –∫–∞–∫", "\n".join(self.results["objects"]), height=150)
        if "ocr" in self.results:
            st.text_area("–¢–µ–∫—Å—Ç –≤ –∫–∞–¥—Ä–µ", self.results["ocr"], height=150)
        if "classification" in self.results:
            st.text_area("–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –≤–∏–¥–µ–æ", self.results["classification"], height=150)


def main():
    st.set_page_config(page_title="–í–∏–¥–µ–æ-–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä", layout="wide")
    st.title("üé• –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –≤–∏–¥–µ–æ —Å –ø–æ–º–æ—â—å—é –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π")

    ui = PipelineUI()
    ui.render_sidebar()
    ui.upload_video()
    ui.run_analysis()
    ui.show_results()


main()
